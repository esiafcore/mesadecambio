// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Xanes.Web.Data;

#nullable disable

namespace Xanes.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240228225627_AddModelsTableToDb")]
    partial class AddModelsTableToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Xanes.Web.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("BankAccountExcludeUId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bankaccountexcludeuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<decimal>("ComisionBancariaPorcentaje")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("comisionbancariaporcentaje");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("companyid");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit")
                        .HasColumnName("iscompany");

                    b.Property<string>("LogoBank")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("logobank");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("name");

                    b.Property<int>("OrderPriority")
                        .HasColumnType("int")
                        .HasColumnName("orderpriority");

                    b.HasKey("Id")
                        .HasName("pk_banks");

                    b.HasIndex(new[] { "CompanyId", "Code" }, "banks_idx_2010")
                        .IsUnique()
                        .HasDatabaseName("ix_banks_companyid_code");

                    b.ToTable("banks", "bco");
                });

            modelBuilder.Entity("Xanes.Web.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("abbreviation");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("code");

                    b.Property<string>("CodeIso")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("codeiso");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("companyid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("NameFor")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("namefor");

                    b.Property<string>("NameForSingular")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nameforsingular");

                    b.Property<string>("NameSingular")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("namesingular");

                    b.Property<int>("Numeral")
                        .HasColumnType("int")
                        .HasColumnName("numeral");

                    b.HasKey("Id")
                        .HasName("pk_currencies");

                    b.HasIndex(new[] { "CompanyId", "CodeIso" }, "currencies_idx_2010")
                        .IsUnique()
                        .HasDatabaseName("ix_currencies_companyid_codeiso");

                    b.HasIndex(new[] { "CompanyId", "Code" }, "currencies_idx_2020")
                        .IsUnique()
                        .HasDatabaseName("ix_currencies_companyid_code");

                    b.HasIndex(new[] { "CompanyId", "Abbreviation" }, "currencies_idx_2030")
                        .IsUnique()
                        .HasDatabaseName("ix_currencies_companyid_abbreviation");

                    b.HasIndex(new[] { "CompanyId", "Numeral" }, "currencies_idx_2040")
                        .IsUnique()
                        .HasDatabaseName("ix_currencies_companyid_numeral");

                    b.ToTable("currencies", "cnf");
                });

            modelBuilder.Entity("Xanes.Web.Models.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("companyid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("name");

                    b.Property<int>("Numeral")
                        .HasColumnType("int")
                        .HasColumnName("numeral");

                    b.HasKey("Id")
                        .HasName("pk_customerstypes");

                    b.HasIndex(new[] { "CompanyId", "Code" }, "customerstypes_idx_2010")
                        .IsUnique()
                        .HasDatabaseName("ix_customerstypes_companyid_code");

                    b.HasIndex(new[] { "CompanyId", "Numeral" }, "customerstypes_idx_2020")
                        .IsUnique()
                        .HasDatabaseName("ix_customerstypes_companyid_numeral");

                    b.ToTable("customerstypes", "cxc");
                });

            modelBuilder.Entity("Xanes.Web.Models.QuotationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("code");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("companyid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("name");

                    b.Property<int>("Numeral")
                        .HasColumnType("int")
                        .HasColumnName("numeral");

                    b.Property<short>("OrderSequence")
                        .HasColumnType("smallint")
                        .HasColumnName("ordersequence");

                    b.HasKey("Id")
                        .HasName("pk_quotationstypes");

                    b.HasIndex(new[] { "CompanyId", "Code" }, "quotationstypes_idx_2010")
                        .IsUnique()
                        .HasDatabaseName("ix_quotationstypes_companyid_code");

                    b.HasIndex(new[] { "CompanyId", "Numeral" }, "quotationstypes_idx_2020")
                        .IsUnique()
                        .HasDatabaseName("ix_quotationstypes_companyid_numeral");

                    b.ToTable("quotationstypes", "fac");
                });
#pragma warning restore 612, 618
        }
    }
}
